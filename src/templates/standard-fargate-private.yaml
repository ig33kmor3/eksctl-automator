# deploy a standard eks cluster with two managed nodegroups and a vpc: 34 mins - https://eksctl.io/usage/schema/
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

# cluster configuration metadata
metadata:
  # name: prod-apps
  region: us-west-2
  # version: "1.27"

# create vpc with cidr and gateway configuration
vpc:
  # cidr: 192.168.0.0/16
  nat:
    gateway: Single

# add addons for kubernetes cluster
addons:
- name: vpc-cni
  version: latest
  # attachPolicyARNs:
  #   - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
- name: coredns
  version: latest
- name: kube-proxy
  version: latest
- name: aws-ebs-csi-driver
  version: latest

# added fargate nodes
fargateProfiles:
  - name: standard
    selectors:
      # All workloads in the "default" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: default
      # All workloads in the "kube-system" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: kube-system

# configure irsa for kubernetes cluster - service accounts 
iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
  - metadata:
      name: build-service
      namespace: ci-cd
    wellKnownPolicies:
      imageBuilder: true