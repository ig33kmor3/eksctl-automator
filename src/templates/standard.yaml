# deploy a standard eks cluster with two managed nodes and a vpc - https://eksctl.io/usage/schema/
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

# cluster configuration metadata
metadata:
  name: standard
  region: us-west-2
  version: "1.21"

# create vpc with cidr and gateway configuration
vpc:
  cidr: 192.168.0.0/16
  nat:
    gateway: Single

# add addons for kubernetes cluster
addons:
- name: vpc-cni
  version: latest
  attachPolicyARNs:
    - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
- name: coredns
  version: latest
- name: kube-proxy
  version: latest

# add general and intensive managed node groups
managedNodeGroups:
  - name: general-managed-ng-1
    instanceType: m5a.xlarge
    minSize: 2
    maxSize: 4
    desiredCapacity: 2
    volumeSize: 60
    privateNetworking: true
    labels: {compute: general}
    tags:
      nodegroup-compute: general
    iam:
      attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  - name: intensive-managed-ng-1
    instanceType: c5a.4xlarge
    minSize: 2
    maxSize: 4
    desiredCapacity: 2
    volumeSize: 60
    privateNetworking: true
    labels: {compute: intensive}
    tags:
      nodegroup-compute: intensive
    iam:
      attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

# configure irsa for kubernetes cluster - service accounts 
iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
  - metadata:
      name: build-service
    wellKnownPolicies:
      imageBuilder: true